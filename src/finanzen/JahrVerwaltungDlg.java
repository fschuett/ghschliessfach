/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JahrVerwaltungDlg.java
 *
 * Created on 18.09.2011, 08:44:54
 */

package finanzen;

import historie.Historie;
import historie.Rubrik;

import java.util.Calendar;
import java.util.Iterator;

import javax.persistence.Query;
import javax.swing.JOptionPane;

import schliessfach.SchliessfachApp;
import vertrag.Vertrag;
import vertrag.Zahlung;
import vertrag.Zahlungsart;

/**
 *
 * @author fschuett
 */
public class JahrVerwaltungDlg extends javax.swing.JDialog {

    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	/** Creates new form JahrVerwaltungDlg */
    public JahrVerwaltungDlg(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        em = java.beans.Beans.isDesignTime() ? null : SchliessfachApp.getApplication().em;
        jahrQuery = java.beans.Beans.isDesignTime() ? null : em.createQuery("SELECT j FROM Jahr j ORDER BY j.jahr"); // NOI18N
        jahrListe = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(new java.util.LinkedList(jahrQuery.getResultList()));
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jahr = new javax.swing.JList();
        jPanel2 = new javax.swing.JPanel();
        neu = new javax.swing.JButton();
        entfernen = new javax.swing.JButton();
        schliessen = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Jahre verwalten");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Jahre", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12))); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jahr.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jahr.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jahr.setName("jahr"); // NOI18N

        org.jdesktop.swingbinding.JListBinding jListBinding = org.jdesktop.swingbinding.SwingBindings.createJListBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, jahrListe, jahr);
        bindingGroup.addBinding(jListBinding);

        jScrollPane1.setViewportView(jahr);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setName("jPanel2"); // NOI18N

        neu.setText("Neu");
        neu.setToolTipText("Ein neues Jahr erfassen. Dadurch werden automatisch Fächermieten fällig.");
        neu.setName("neu"); // NOI18N
        neu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                neuActionPerformed(evt);
            }
        });

        entfernen.setText("Entfernen");
        entfernen.setToolTipText("Die Entfernung eines Jahres entfernt auch alle Finanzbewegungen für dieses Jahr. Alle Finanzbewegungen müssen 10 Jahre aufbewahrt werden.");
        entfernen.setName("entfernen"); // NOI18N
        entfernen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entfernenActionPerformed(evt);
            }
        });

        schliessen.setText("Schließen");
        schliessen.setName("schliessen"); // NOI18N
        schliessen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schliessenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(entfernen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(neu, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                    .addComponent(schliessen, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(neu)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(entfernen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                .addComponent(schliessen)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void neuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_neuActionPerformed
        String s = (String)JOptionPane.showInputDialog(this.getParent(), "Bitte geben Sie das gewünschte Jahr ein.", SchliessfachApp.getApplication().heute.get(Calendar.YEAR));
        try {
            if(s == null)
                return;
            Long l = Long.parseLong(s);
            Query q = em.createQuery("SELECT j.jahr FROM Jahr j WHERE j.jahr="+l);
            if(!q.getResultList().isEmpty()){
                JOptionPane.showMessageDialog(this.getParent(), "Das Jahr "+l+" existiert bereits.", "Jahr erfassen", JOptionPane.ERROR_MESSAGE);
                return;
            }
            Jahr j = new Jahr(l,null);
            Zahlung z;
            double betrag;
            em.getTransaction().begin();
            em.persist(j);
            Historie.anhaengen(Rubrik.JAHR, j.getJahr().toString(), "hinzugefügt: "+j.toString());
            q = em.createQuery("SELECT v FROM Vertrag v WHERE v.beginnJahr <= "+j.getJahr()+" AND v.endeJahr IS NULL OR "+j.getJahr()+" BETWEEN v.beginnJahr AND v.endeJahr");
            Iterator<Vertrag> vertragIt = q.getResultList().iterator();
            while(vertragIt.hasNext()){
                Vertrag v = vertragIt.next();
                if(v.isBeginnSommer() && v.getBeginnJahr() == j.getJahr().intValue()
                        || v.getEndeJahr() != null && v.isEndeSommer() && v.getEndeJahr() == j.getJahr().intValue()){
                    betrag = -SchliessfachApp.getApplication().aktuelleGebuehren.get(Zahlungsart.MieteHalbjahr);
                    z = new Zahlung(v,Zahlungsart.MieteHalbjahr,j.getJahr().intValue(),betrag);
                }
                else {
                    betrag = -SchliessfachApp.getApplication().aktuelleGebuehren.get(Zahlungsart.Miete);
                    z = new Zahlung(v,Zahlungsart.Miete,j.getJahr().intValue(),betrag);                    
                }
                em.persist(z);
                Historie.anhaengen(Rubrik.ZAHLUNG, z.getVertrag().toString(), "hinzugefügt: "+z.toString());
            }
            em.getTransaction().commit();
            jahrListe.add(j.getJahr());
        } catch(NullPointerException ex){
            ex.printStackTrace();
        } catch(NumberFormatException ex){
            ex.printStackTrace();
        }
    }//GEN-LAST:event_neuActionPerformed

    private void entfernenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entfernenActionPerformed
        int j = ((Jahr)jahr.getSelectedValue()).getJahr().intValue();
        if(j == -1){
            JOptionPane.showMessageDialog(this.getParent(), "Sie müssen zunächst ein Jahr in der Liste wählen.", "Jahr entfernen", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Query q = em.createQuery("DELETE FROM Jahr j WHERE j.jahr="+j);
        em.getTransaction().begin();
        q.executeUpdate();
        q = em.createQuery("DELETE FROM Zahlung z WHERE "+Zahlungsart.mietenQS("z.leihJahr="+j+" AND z.art"));
        q.executeUpdate();
        em.getTransaction().commit();
        jahrListe.remove(jahr.getSelectedIndex());
    }//GEN-LAST:event_entfernenActionPerformed

    private void schliessenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schliessenActionPerformed
        dispose();
    }//GEN-LAST:event_schliessenActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JahrVerwaltungDlg dialog = new JahrVerwaltungDlg(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager em;
    private javax.swing.JButton entfernen;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList jahr;
    private java.util.List<Long> jahrListe;
    private javax.persistence.Query jahrQuery;
    private javax.swing.JButton neu;
    private javax.swing.JButton schliessen;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
