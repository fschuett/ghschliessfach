/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GebuehrenDlg.java
 *
 * Created on 05.10.2011, 09:58:33
 */
package gebuehren;

import historie.Historie;
import historie.Rubrik;

import java.text.ParseException;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Date;
import java.util.EnumSet;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.persistence.EntityManager;
import javax.persistence.Query;
import javax.swing.DefaultListModel;

import schliessfach.SchliessfachApp;
import vertrag.Zahlungsart;
import finanzen.Jahr;

/**
 * 
 * @author fschuett
 */
public class GebuehrenDlg extends javax.swing.JDialog {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Map<Zahlungsart, Double> gebuehren;
	private EntityManager em;
	private Calendar kalender;

	/** Creates new form GebuehrenDlg */
	public GebuehrenDlg(java.awt.Frame parent, Jahr jahr) {
		super(parent, true);
		em = SchliessfachApp.getApplication().em;
		initComponents();
		kalender = Calendar.getInstance();
		kalender.set(Calendar.YEAR, jahr.getJahr().intValue());
		this.jahr.setValue(kalender.getTime());
		gebuehren = new HashMap<Zahlungsart, Double>();
		aktualisiereGebuehrenliste();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jPanel1 = new javax.swing.JPanel();
		jScrollPane1 = new javax.swing.JScrollPane();
		gebuehrenListe = new javax.swing.JList();
		jLabel1 = new javax.swing.JLabel();
		jahr = new javax.swing.JFormattedTextField();
		jPanel2 = new javax.swing.JPanel();
		neuerWert = new javax.swing.JFormattedTextField();
		aendern = new javax.swing.JButton();
		jButton1 = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setTitle("Gebühren bearbeiten");

		jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null,
				"Gebührenliste",
				javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION,
				javax.swing.border.TitledBorder.DEFAULT_POSITION,
				new java.awt.Font("Dialog", 0, 12))); // NOI18N
		jPanel1.setName("jPanel1"); // NOI18N

		jScrollPane1.setName("jScrollPane1"); // NOI18N

		gebuehrenListe.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
		gebuehrenListe
				.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
		gebuehrenListe
				.setToolTipText("Wählen Sie eine Gebühr zur Änderung des Betrages aus.");
		gebuehrenListe.setName("gebuehrenListe"); // NOI18N
		gebuehrenListe
				.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
					public void valueChanged(
							javax.swing.event.ListSelectionEvent evt) {
						gebuehrenListeValueChanged(evt);
					}
				});
		jScrollPane1.setViewportView(gebuehrenListe);

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(
				jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				jPanel1Layout
						.createSequentialGroup()
						.addContainerGap()
						.addComponent(jScrollPane1,
								javax.swing.GroupLayout.DEFAULT_SIZE, 205,
								Short.MAX_VALUE).addContainerGap()));
		jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				jPanel1Layout
						.createSequentialGroup()
						.addComponent(jScrollPane1,
								javax.swing.GroupLayout.DEFAULT_SIZE, 255,
								Short.MAX_VALUE).addContainerGap()));

		jLabel1.setText("Gültigkeitsjahr:");
		jLabel1.setName("jLabel1"); // NOI18N

		jahr.setColumns(6);
		jahr.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(
				new javax.swing.text.DateFormatter(
						new java.text.SimpleDateFormat("yyyy"))));
		jahr.setToolTipText("Geben Sie das Jahr ein, für das die gültigen Gebühren angezeigt werden sollen.");
		jahr.setName("jahr"); // NOI18N
		jahr.addFocusListener(new java.awt.event.FocusAdapter() {
			public void focusLost(java.awt.event.FocusEvent evt) {
				jahrFocusLost(evt);
			}
		});

		jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null,
				"Gebühr ändern",
				javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION,
				javax.swing.border.TitledBorder.DEFAULT_POSITION,
				new java.awt.Font("Dialog", 0, 12))); // NOI18N
		jPanel2.setName("jPanel2"); // NOI18N

		neuerWert
				.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(
						new javax.swing.text.NumberFormatter(
								java.text.NumberFormat.getCurrencyInstance())));
		neuerWert.setEnabled(gebuehrenListe.getSelectedIndex() != -1);
		neuerWert.setName("neuerWert"); // NOI18N

		aendern.setText("Gebühr ändern");
		aendern.setEnabled(gebuehrenListe.getSelectedIndex() != -1);
		aendern.setName("aendern"); // NOI18N
		aendern.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				aendernActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(
				jPanel2);
		jPanel2.setLayout(jPanel2Layout);
		jPanel2Layout
				.setHorizontalGroup(jPanel2Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								javax.swing.GroupLayout.Alignment.TRAILING,
								jPanel2Layout
										.createSequentialGroup()
										.addContainerGap()
										.addGroup(
												jPanel2Layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.TRAILING)
														.addComponent(
																aendern,
																javax.swing.GroupLayout.Alignment.LEADING,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																182,
																Short.MAX_VALUE)
														.addComponent(
																neuerWert,
																javax.swing.GroupLayout.Alignment.LEADING,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																182,
																Short.MAX_VALUE))
										.addContainerGap()));
		jPanel2Layout
				.setVerticalGroup(jPanel2Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanel2Layout
										.createSequentialGroup()
										.addComponent(
												neuerWert,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addComponent(aendern)
										.addContainerGap(
												javax.swing.GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)));

		jButton1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
		jButton1.setText("Schließen");
		jButton1.setToolTipText("Schließt den aktuellen Dialog.");
		jButton1.setName("jButton1"); // NOI18N
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING,
												false)
												.addGroup(
														layout.createSequentialGroup()
																.addComponent(
																		jLabel1)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		jahr))
												.addComponent(
														jPanel1,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(18, 18, 18)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.TRAILING)
												.addComponent(jButton1)
												.addComponent(
														jPanel2,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														Short.MAX_VALUE))
								.addContainerGap()));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel1)
												.addComponent(
														jahr,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														javax.swing.GroupLayout.Alignment.TRAILING,
														layout.createSequentialGroup()
																.addComponent(
																		jPanel2,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED,
																		174,
																		Short.MAX_VALUE)
																.addComponent(
																		jButton1))
												.addComponent(
														jPanel1,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														Short.MAX_VALUE))
								.addContainerGap()));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed
		dispose();
	}// GEN-LAST:event_jButton1ActionPerformed

	private void jahrFocusLost(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_jahrFocusLost
		try {
			jahr.commitEdit();
			aktualisiereGebuehrenliste();
		} catch (ParseException ex) {
			Logger.getLogger(GebuehrenDlg.class.getName()).log(Level.SEVERE,
					ex.getMessage());
		}
	}// GEN-LAST:event_jahrFocusLost

	private void gebuehrenListeValueChanged(
			javax.swing.event.ListSelectionEvent evt) {// GEN-FIRST:event_gebuehrenListeValueChanged
		int index = evt.getLastIndex();
		if (index == -1) {
			neuerWert.setValue(0);
			neuerWert.setEnabled(false);
			aendern.setEnabled(false);
		} else {
			String s = (String) gebuehrenListe.getSelectedValue();
			if (s == null) {
				neuerWert.setValue(0);
				neuerWert.setEnabled(false);
				aendern.setEnabled(false);
				return;
			}
			s = s.substring(0, s.indexOf("("));
			Zahlungsart z = Zahlungsart.valueOf(s);
			if (z != null && gebuehren.containsKey(z)) {
				neuerWert.setValue(gebuehren.get(z));
				neuerWert.setEnabled(true);
				aendern.setEnabled(true);
			} else {
				neuerWert.setValue(0);
				neuerWert.setEnabled(false);
				aendern.setEnabled(false);
			}
		}
	}// GEN-LAST:event_gebuehrenListeValueChanged

	private void aendernActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_aendernActionPerformed
		String s = (String) gebuehrenListe.getSelectedValue();
		s = s.substring(0, s.indexOf("("));
		Zahlungsart z = Zahlungsart.valueOf(s);
		if (z != null) {
			kalender.setTime((Date) jahr.getValue());
			Gebuehr g = new Gebuehr(
					Calendar.getInstance().getTime(), z,
					kalender.get(Calendar.YEAR),
					((Number) neuerWert.getValue()).doubleValue());
			em.getTransaction().begin();
			em.persist(g);
			Historie.anhaengen(Rubrik.GEBUEHR,g.getArt().toString(),"geändert: "+g.toString());
			em.getTransaction().commit();
			aktualisiereGebuehrenliste();
		}
	}// GEN-LAST:event_aendernActionPerformed

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {

			public void run() {
				GebuehrenDlg dialog = new GebuehrenDlg(
						new javax.swing.JFrame(), new Jahr());
				dialog.addWindowListener(new java.awt.event.WindowAdapter() {

					public void windowClosing(java.awt.event.WindowEvent e) {
						System.exit(0);
					}
				});
				dialog.setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton aendern;
	private javax.swing.JList gebuehrenListe;
	private javax.swing.JButton jButton1;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JFormattedTextField jahr;
	private javax.swing.JFormattedTextField neuerWert;

	// End of variables declaration//GEN-END:variables

	private void aktualisiereGebuehrenliste() {
		gebuehren.clear();
		kalender.setTime((Date) jahr.getValue());
		for (Zahlungsart z : EnumSet.allOf(Zahlungsart.class)) {
			Query q = em
					.createQuery("SELECT g FROM Gebuehr g WHERE g.art=vertrag.Zahlungsart."
							+ z
							+ " AND g.abJahr<="
							+ kalender.get(Calendar.YEAR)
							+ " ORDER BY g.abJahr ASC, g.zeitpunkt ASC");
			List<Gebuehr> neueGebuehren = q.getResultList();
			if (!neueGebuehren.isEmpty()) {
				gebuehren.put(z, neueGebuehren.get(0)
						.getBetrag());
			} else {
				gebuehren.put(z, new Double(0.0));
			}
		}
		DefaultListModel model = new DefaultListModel();
		Iterator<Zahlungsart> it = gebuehren.keySet().iterator();
		String[] sar = new String[gebuehren.size()];
		int i = 0;
		while (it.hasNext()) {
			Zahlungsart z = it.next();
			sar[i++] = z + "(" + gebuehren.get(z) + " €)";
		}
		// schließlich sortieren
		Arrays.sort(sar);
		for (i = 0; i < sar.length; i++)
			model.addElement(sar[i]);
		gebuehrenListe.setModel(model);
	}
}
